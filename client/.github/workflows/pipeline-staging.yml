name: Deploy to Staging
on:
  push:
    branches:
      - staging

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [19.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm test
      - run: npm run build:staging

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build

      - name: Remove old build
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSHUSERNAME }}
          password: ${{ secrets.SSHPASSWORD }}
          script: |
            echo ${{ secrets.SSHPASSWORD }} | sudo -S rm -rf /var/www/staging.chaoss.community/*
            mkdir -p /var/www/staging.chaoss.community

      - name: Upload build
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSHUSERNAME }}
          password: ${{ secrets.SSHPASSWORD }}
          source: "${{ github.workspace }}/build/*"
          target: /var/www/staging.chaoss.community/


      - name: Restart nginx
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSHUSERNAME }}
          password: ${{ secrets.SSHPASSWORD }}
          script: |
            echo ${{ secrets.SSHPASSWORD }} | sudo -S systemctl restart nginx
